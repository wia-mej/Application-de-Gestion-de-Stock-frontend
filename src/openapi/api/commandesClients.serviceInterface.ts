/**
 * Gestion de stock REST API
 * Documentation pour l\'API REST Gestion des stocks
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: wiamejaoui.wj@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CommandeClientDto } from '../model/models';
import { LigneCommandeClientDto } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface CommandesClientsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Supprimer une commande client
     * Cette méthode permet de supprimer une commande client donnée.
     * @param idCommandeClient 
     */
    delete6(idCommandeClient: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Supprimer une ligne d\&#39;produit d\&#39;une commande
     * Cette méthode permet de supprimer une ligne d\&#39;produit associée à une commande client.
     * @param idCommande 
     * @param idLigneCommande 
     */
    deleteProduit1(idCommande: number, idLigneCommande: number, extraHttpRequestParams?: any): Observable<CommandeClientDto>;

    /**
     * Retourner la liste des commandes clients
     * Cette méthode permet de retourner la liste de toutes les commandes clients.
     */
    findAll6(extraHttpRequestParams?: any): Observable<Array<CommandeClientDto>>;

    /**
     * Retourner les lignes de commande client pour un ID commande
     * Cette méthode permet de retourner les lignes de commande client associées à une commande donnée.
     * @param idCommande 
     */
    findAllLignesCommandesClientByCommandeClientId(idCommande: number, extraHttpRequestParams?: any): Observable<Array<LigneCommandeClientDto>>;

    /**
     * Rechercher une commande client par CODE
     * Cette méthode permet de récupérer une commande client par son CODE.
     * @param codeCommandeClient 
     */
    findByCode2(codeCommandeClient: string, extraHttpRequestParams?: any): Observable<CommandeClientDto>;

    /**
     * Rechercher une commande client par ID
     * Cette méthode permet de récupérer une commande client par son ID.
     */
    findById6(extraHttpRequestParams?: any): Observable<CommandeClientDto>;

    /**
     * Enregistrer une commande client
     * Cette méthode permet d\&#39;enregistrer ou de modifier une commande client.
     * @param commandeClientDto 
     */
    save6(commandeClientDto: CommandeClientDto, extraHttpRequestParams?: any): Observable<CommandeClientDto>;

    /**
     * Modifier le client associé à une commande
     * Cette méthode permet de modifier le client associé à une commande client.
     * @param idCommande 
     * @param idClient 
     */
    updateClient(idCommande: number, idClient: number, extraHttpRequestParams?: any): Observable<CommandeClientDto>;

    /**
     * Modifier l\&#39;état d\&#39;une commande
     * Cette méthode permet de modifier l\&#39;état d\&#39;une commande client.
     * @param idCommande 
     * @param etatCommande 
     */
    updateEtatCommande1(idCommande: number, etatCommande: 'EN_PREPARATION' | 'VALIDEE' | 'LIVREE', extraHttpRequestParams?: any): Observable<CommandeClientDto>;

    /**
     * Modifier l\&#39;produit associé à une ligne commande
     * Cette méthode permet de modifier un produit associé à une ligne d\&#39;une commande client.
     * @param idCommande 
     * @param idLigneCommande 
     * @param idProduit 
     */
    updateProduit1(idCommande: number, idLigneCommande: number, idProduit: number, extraHttpRequestParams?: any): Observable<CommandeClientDto>;

    /**
     * Modifier la quantité d\&#39;une ligne de commande
     * Cette méthode permet de modifier la quantité d\&#39;une ligne d\&#39;une commande client.
     * @param idCommande 
     * @param idLigneCommande 
     * @param quantite 
     */
    updateQuantiteCommande1(idCommande: number, idLigneCommande: number, quantite: number, extraHttpRequestParams?: any): Observable<CommandeClientDto>;

}
