/**
 * Gestion de stock REST API
 * Documentation pour l\'API REST Gestion des stocks
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: wiamejaoui.wj@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { LigneCommandeClientDto } from '../model/models';
import { LigneCommandeFournisseurDto } from '../model/models';
import { LigneVenteDto } from '../model/models';
import { ProduitDto } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface ProduitsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Supprimer un produit
     * Cette méthode permet de supprimer un produit par ID
     * @param idProduit 
     */
    delete2(idProduit: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Renvoie la liste des produits
     * Cette méthode permet de chercher et renvoyer la liste des produits qui existent dans la BDD
     */
    findAll2(extraHttpRequestParams?: any): Observable<ProduitDto>;

    /**
     * Liste des produits par catégorie
     * Cette méthode permet de récupérer tous les produits liés à une catégorie donnée
     * @param idCategory 
     */
    findAllProduitByIdCategory(idCategory: number, extraHttpRequestParams?: any): Observable<Array<ProduitDto>>;

    /**
     * Rechercher un produit par CODE
     * Cette méthode permet de chercher un produit par son CODE
     * @param codeProduit 
     */
    findByCodeProduit(codeProduit: string, extraHttpRequestParams?: any): Observable<ProduitDto>;

    /**
     * Rechercher un produit par ID
     * Cette méthode permet de chercher un produit par son ID
     * @param idProduit 
     */
    findById2(idProduit: number, extraHttpRequestParams?: any): Observable<ProduitDto>;

    /**
     * Historique des commandes client d\&#39;un produit
     * Cette méthode permet de récupérer l\&#39;historique des commandes client d\&#39;un produit
     * @param idProduit 
     */
    findHistoriqueCommandeClient(idProduit: number, extraHttpRequestParams?: any): Observable<Array<LigneCommandeClientDto>>;

    /**
     * Historique des commandes fournisseur d\&#39;un produit
     * Cette méthode permet de récupérer l\&#39;historique des commandes fournisseur d\&#39;un produit
     * @param idProduit 
     */
    findHistoriqueCommandeFournisseur(idProduit: number, extraHttpRequestParams?: any): Observable<Array<LigneCommandeFournisseurDto>>;

    /**
     * Historique des ventes d\&#39;un produit
     * Cette méthode permet de récupérer l\&#39;historique des ventes d\&#39;un produit
     * @param idProduit 
     */
    findHistoriqueVentes(idProduit: number, extraHttpRequestParams?: any): Observable<Array<LigneVenteDto>>;

    /**
     * Enregistrer un produit
     * Cette methode permet d\&#39;enregistrer ou modifier un produit
     * @param produitDto 
     */
    save2(produitDto: ProduitDto, extraHttpRequestParams?: any): Observable<ProduitDto>;

}
